// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  password String
  values   Value[]
  goals    Goal[]
}

// This a feeling that someone has that **motivates** different behaviours
model Motivator {
  id          Int                   @id @default(autoincrement())
  User        User                  @relation(fields: [userId], references: [id])
  userId      Int
  name        String
  description String?
  // This represents how positive the motivator is
  // E.g. For Jealously, positivity would equal around zero
  // E.g. For Family, positivity would equal around ten
  positivity  Int
  // These are the behaviours that this motivator motivates
  behaviours  BehaviourMotivators[]
}

// Joining table that links the Motivator table and the Behaviour table
model BehaviourMotivators {
  behaviour   Behaviour @relation(fields: [behaviourId], references: [id])
  behaviourId Int
  motivator   Motivator @relation(fields: [motivatorId], references: [id])
  motivatorId Int

  // Explicit state many-to-many relatioship
  @@id([behaviourId, motivatorId])
}

// This is an action that a user does regularly
// They are motivated by motivators
// Can be grouped into goals that can remind users to do something (go for a run)
// or not do something (don't watch TV)
model Behaviour {
  id          Int                   @id @default(autoincrement())
  name        String
  description String?
  User        User                  @relation(fields: [userId], references: [id])
  userId      Int
  goal        Goal[]
  motivators  BehaviourMotivators[]
}

// This is goal that the user can set that will send reminders on a regular basis
// TODO:
//      - Is reminder a better term
//      - Multiple behaviours, one behaviour, no behaviours

model Goal {
  id              Int              @id @default(autoincrement())
  behaviour       Behaviour        @relation(fields: [goalId], references: [id])
  behaviourId     Int
  name            String
  description     String?
  // This field will be however we store the sheduling
  // e.g. Stringified JSON object
  shedule         String
  // May be a better datatype for this
  difficulty      Int?
  behaviourEvents BehaviourEvent[]
}

// This allows users to log when they perform a behaviour
// These records will be used to help visualise which behaviours a user performs most frequently
model BehaviourEvent {
  id          Int       @id @default(autoincrement())
  Behaviour   Behaviour @relation(fields: [behaviourId], references: [id])
  behaviourId Int
  comment     String?
  timeStamp   DateTime  @default(now())
}
