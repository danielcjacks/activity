// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

model User {
  id            Int            @id @default(autoincrement())
  username      String         @unique
  password      String
  motivators    Motivator[]
  behaviours    Behaviour[]
  subscriptions Subscription[]
}

// This a feeling that someone has that **motivates** different behaviours
model Motivator {
  id                   Int                  @id @default(autoincrement())
  user                 User                 @relation(fields: [user_id], references: [id])
  user_id              Int
  name                 String
  description          String?
  // This represents how positive the motivator is
  // E.g. For Jealously, positivity would equal negative five
  // E.g. For Family, positivity would equal around five
  positivity           Int
  // These are the behaviours that this motivator motivates
  behaviour_motivators BehaviourMotivator[]
}

// Joining table that links the Motivator table and the Behaviour table
model BehaviourMotivator {
  behaviour    Behaviour @relation(fields: [behaviour_id], references: [id], onDelete: Cascade)
  behaviour_id Int
  motivator    Motivator @relation(fields: [motivator_id], references: [id], onDelete: Cascade)
  motivator_id Int

  // Explicit state many-to-many relatioship
  @@id([behaviour_id, motivator_id])
}

// This is an action that a user does regularly
// They are motivated by motivators
// Can be grouped into goals that can remind users to do something (go for a run)
// or not do something (don't watch TV)
model Behaviour {
  id                   Int                  @id @default(autoincrement())
  name                 String
  description          String?
  user                 User                 @relation(fields: [user_id], references: [id])
  user_id              Int
  behaviour_motivators BehaviourMotivator[]
  behaviour_events     BehaviourEvent[]
  // True if user wants reminders
  send_reminders       Boolean              @default(false)
  // True if user wants reminders on the specific day
  monday               Boolean              @default(false)
  tuesday              Boolean              @default(false)
  wednesday            Boolean              @default(false)
  thursday             Boolean              @default(false)
  friday               Boolean              @default(false)
  saturday             Boolean              @default(false)
  sunday               Boolean              @default(false)
  // Reminder hour (UTC) (24hr)
  hour                 Int                  @default(0)
  // Reminder minute (UTC) (5 min intervals)
  minute               Int                  @default(0)

}

// This allows users to log when they perform a behaviour
// These records will be used to help visualise which behaviours a user performs most frequently
// TODO: does this store the goal
model BehaviourEvent {
  id           Int       @id @default(autoincrement())
  behaviour    Behaviour @relation(fields: [behaviour_id], references: [id], onDelete: Cascade)
  behaviour_id Int
  comment      String?
  time_stamp   DateTime  @default(now())
}

// Store all the device push notification subscriptions
// When a user gets a notification, they get it on all registered devices
model Subscription {
  id           Int    @id @default(autoincrement())
  user         User   @relation(fields: [user_id], references: [id])
  user_id      Int
  subscription String @unique
}
